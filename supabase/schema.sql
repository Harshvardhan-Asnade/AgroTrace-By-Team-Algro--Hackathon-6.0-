-- Create the produce_lots table
create table if not exists public.produce_lots (
  id text primary key,
  name text not null,
  origin text not null,
  "plantingDate" timestamp with time zone not null,
  "harvestDate" timestamp with time zone not null,
  "itemCount" integer not null,
  farmer jsonb not null,
  certificates jsonb,
  history jsonb not null,
  "created_at" timestamp with time zone default now() not null
);

-- Set up Row Level Security (RLS)
alter table public.produce_lots enable row level security;

-- Create policy for public read access
create policy "Allow public read access to all lots"
on public.produce_lots for select
using (true);

-- Create policy for authenticated users to create lots
create policy "Allow authenticated users to create lots"
on public.produce_lots for insert
with check (auth.role() = 'authenticated');

-- Create policy for authenticated users to update their own lots
create policy "Allow authenticated users to update lots"
on public.produce_lots for update
using (auth.role() = 'authenticated');

-- Create the feedback table
create table if not exists public.feedback (
  id bigint generated by default as identity primary key,
  lot_id text not null,
  feedback_text text not null,
  created_at timestamp with time zone default now() not null
);

-- Set up Row Level Security (RLS) for feedback
alter table public.feedback enable row level security;

-- Create policy for public read access
create policy "Allow public read access to feedback"
on public.feedback for select
using (true);

-- Create policy for anyone to insert feedback
create policy "Allow anyone to insert feedback"
on public.feedback for insert
with check (true);
